name: PR Tests

on:
  pull_request:
    branches:
      - main
      - develop
      - release/**

concurrency:
  group: pr-tests-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  determine-services:
    name: Determine changed microservices
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List candidate services
        id: list
        run: |
          echo "services=auditoria autenticacion clientes inventario logistica productos proveedores reportes ventas" >> $GITHUB_OUTPUT

      - name: Detect changed paths
        id: changed
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            base="${{ github.event.pull_request.base.sha }}"
            head="${{ github.event.pull_request.head.sha }}"
          else
            base="${{ github.sha }}^"
            head="${{ github.sha }}"
          fi
          git diff --name-only "$base" "$head" > changed_files.txt
          echo "Changed files:" && cat changed_files.txt || true

      - name: Build matrix from changes
        id: set-matrix
        shell: bash
        run: |
          # Split services string into array
          IFS=' ' read -ra candidates <<< "${{ steps.list.outputs.services }}"
          declare -a selected=()
          
          if [[ -s changed_files.txt ]]; then
            for svc in "${candidates[@]}"; do
              if grep -qE "^src/${svc}/" changed_files.txt; then
                selected+=("${svc}")
              fi
            done
          fi

          # If no specific services changed, run all services
          if [[ ${#selected[@]} -eq 0 ]]; then
            selected=("${candidates[@]}")
          fi

          # Build JSON array properly
          json_services=$(printf '"%s",' "${selected[@]}")
          json_services="[${json_services%,}]"
          echo "Matrix services: ${json_services}"
          echo "matrix={\"service\": ${json_services}}" >> $GITHUB_OUTPUT

  test:
    name: Test ${{ matrix.service }}
    needs: determine-services
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.determine-services.outputs.matrix) }}
    defaults:
      run:
        working-directory: src/${{ matrix.service }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.service }}-${{ hashFiles(format('src/{0}/requirements.txt', matrix.service)) }}-${{ hashFiles(format('src/{0}/requirements-dev.txt', matrix.service)) }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.service }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install base dependencies first
          pip install -r requirements.txt
          # Then install dev dependencies if they exist
          if [[ -f requirements-dev.txt ]]; then
            pip install -r requirements-dev.txt
          fi

      - name: Run unit tests
        env:
          TESTING: "1"
        run: |
          pytest -q
